name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black pre-commit

      - name: Lint with ruff
        run: |
          ruff check .
          ruff format --check .

      - name: Check for secrets
        run: |
          # Check for common secret patterns
          if grep -r -E "(api[_-]?key|password|secret|token)" . --include="*.py" --include="*.js" --include="*.json" | grep -v -E "(get_password|decrypt_password|your_api_key|token.*your_)" | grep -v ".github/"; then
            echo "Potential secrets found in code"
            exit 1
          fi

      - name: Validate JSON files
        run: |
          find . -name "*.json" -not -path "./.git/*" -exec python -m json.tool {} > /dev/null \;

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Run security scan
        uses: github/super-linter@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for vulnerable dependencies
        run: |
          # Basic dependency check
          if [ -f "requirements.txt" ]; then
            pip install safety
            safety check -r requirements.txt
          fi

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Check documentation
        run: |
          # Check if README exists and has required sections
          if ! grep -q "Installation" README.md; then
            echo "README.md missing Installation section"
            exit 1
          fi
          if ! grep -q "License" README.md; then
            echo "README.md missing License section"
            exit 1
          fi
